name: Build Release

on:
  release:
    types: [published]

jobs:
  releases-matrix:
    name: Release Go Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # build and publish in parallel: linux/386, linux/amd64, linux/arm64, windows/386, windows/amd64, darwin/amd64, darwin/arm64
        goos: [ linux, windows, darwin ]
        goarch: [ amd64, arm64 ]
        exclude:
          - goarch: arm64
            goos: windows
    steps:
      - uses: actions/checkout@v3
      - name: Codebase security check
        continue-on-error: true
        uses: snyk/actions/golang@master
        with:
          go-version: '1.20'
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      - uses: wangyoucao577/go-release-action@v1.48
        env:
          MIXPANEL_PROJECT_TOKEN: ${{ secrets.MIXPANEL_PROJECT_TOKEN }}
          LILICO_TOKEN: ${{ secrets.LILICO_TOKEN }}
          APP_VERSION: $(basename ${GITHUB_REF})
          BUILD_TIME: $(date --iso-8601=seconds)
          VERSION: ${{github.ref_name}}
          COMMIT: ${{ github.sha }}
        with:
          pre_command: make generate
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          goversion: "1.20"
          project_path: "./cmd/flow"
          ldflags: -X "github.com/onflow/flow-cli/build.commit=${{ env.COMMIT }}" -X "github.com/onflow/flow-cli/build.semver=${{ env.VERSION }}" -X "github.com/onflow/flow-cli/internal/command.mixpanelToken=${{ env.MIXPANEL_PROJECT_TOKEN }}" -X "github.com/onflow/flow-cli/internal/accounts.accountToken=${{ env.LILICO_TOKEN }}"
