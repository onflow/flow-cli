// Code generated by mockery v2.40.3. DO NOT EDIT.

package mocks

import (
	generator "github.com/onflow/flow-cli/internal/super/generator"
	mock "github.com/stretchr/testify/mock"
)

// Generator is an autogenerated mock type for the Generator type
type Generator struct {
	mock.Mock
}

// Create provides a mock function with given fields: items
func (_m *Generator) Create(items ...generator.TemplateItem) error {
	_va := make([]interface{}, len(items))
	for _i := range items {
		_va[_i] = items[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for Create")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(...generator.TemplateItem) error); ok {
		r0 = rf(items...)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewGenerator creates a new instance of Generator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewGenerator(t interface {
	mock.TestingT
	Cleanup(func())
}) *Generator {
	mock := &Generator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
